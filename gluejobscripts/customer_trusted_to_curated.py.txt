import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsglue import DynamicFrame

def sparkSqlQuery(glueContext, query, mapping, transformation_ctx) -> DynamicFrame:
    for alias, frame in mapping.items():
        frame.toDF().createOrReplaceTempView(alias)
    result = spark.sql(query)
    return DynamicFrame.fromDF(result, glueContext, transformation_ctx)
args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

# Script generated for node  Customer Trusted
CustomerTrusted_node1711681104680 = glueContext.create_dynamic_frame.from_catalog(database="stedi", table_name="customer_trusted", transformation_ctx="CustomerTrusted_node1711681104680")

# Script generated for node accelerometer trusted
accelerometertrusted_node1711718405114 = glueContext.create_dynamic_frame.from_catalog(database="stedi", table_name="accelerometer_trusted", transformation_ctx="accelerometertrusted_node1711718405114")

# Script generated for node SQL Query
SqlQuery0 = '''
select distinct ct.* from ct,at
where ct.email=at.user
'''
SQLQuery_node1712459901114 = sparkSqlQuery(glueContext, query = SqlQuery0, mapping = {"ct":CustomerTrusted_node1711681104680, "at":accelerometertrusted_node1711718405114}, transformation_ctx = "SQLQuery_node1712459901114")

# Script generated for node Amazon S3
AmazonS3_node1711681779118 = glueContext.getSink(path="s3://vjdeudanano/customer/curated/", connection_type="s3", updateBehavior="UPDATE_IN_DATABASE", partitionKeys=[], enableUpdateCatalog=True, transformation_ctx="AmazonS3_node1711681779118")
AmazonS3_node1711681779118.setCatalogInfo(catalogDatabase="stedi",catalogTableName="customer_curated")
AmazonS3_node1711681779118.setFormat("json")
AmazonS3_node1711681779118.writeFrame(SQLQuery_node1712459901114)
job.commit()